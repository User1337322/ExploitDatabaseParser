using System;
using System.Diagnostics;
using System.Net.Http;
using System.Threading.Tasks;

class Program
{
    static async Task Main()
    {
        // Путь к конфигурационному файлу OpenVPN
        string openVpnConfigPath = @"F:\vpnbook-openvpn-uk205\vpnbook-uk205-tcp443.ovpn";

        string openVpnExePath = @"C:\Program Files\OpenVPN\bin\openvpn.exe";

        // Запускаем OpenVPN
        using (var openVpnProcess = new Process())
        {
            openVpnProcess.StartInfo.FileName = openVpnExePath;
            openVpnProcess.StartInfo.Arguments = $"--config \"{openVpnConfigPath}\"";

            openVpnProcess.StartInfo.UseShellExecute = false;
            openVpnProcess.StartInfo.RedirectStandardOutput = true;
            openVpnProcess.StartInfo.RedirectStandardError = true;
            openVpnProcess.StartInfo.CreateNoWindow = true;

            openVpnProcess.Start();

            // Ждем некоторое время для установки соединения
            await Task.Delay(10000);

            // Выполняем запрос через HttpClient
            using (var httpClient = new HttpClient())
            {
                try
                {
                    var response = await httpClient.GetAsync("https://api64.ipify.org");
                    if (response.IsSuccessStatusCode)
                    {
                        var html = await response.Content.ReadAsStringAsync();
                        Console.WriteLine(html);
                    }
                    else
                    {
                        Console.WriteLine($"Failed to retrieve the page. Status code: {response.StatusCode}");
                    }
                }
                catch (Exception ex)
                {
                    Console.WriteLine($"An error occurred: {ex.Message}");
                }
            }

            // Останавливаем OpenVPN
            openVpnProcess.Kill();
        }
    }
}
